
services:
  postgresdata:
    image: postgres:14.5
    container_name: eshop-postgres
    environment:
      POSTGRES_USER: eshop_user
      POSTGRES_PASSWORD: eshop_password
      POSTGRES_DB: eshop
    ports:
      - "15432:5432"
    volumes:
      - eshop-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eshop_user -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  basketdata:
    image: redis:alpine
    container_name: eshop-redis
    ports:
      - "6379:6379"
    volumes:
      - eshop-basketdata:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: eshop-rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  identity:
    build:
      context: services/identity/
      dockerfile: Dockerfile
    image: eshop-identity-latest
    container_name: eshop-identity
    ports:
      - "8080:8080"

  basket:
    build:
      context: .
      dockerfile: services/basket/Dockerfile
    depends_on:
      basketdata:
        condition: service_started
      identity:
        condition: service_started
      rabbitmq:
          condition: service_healthy
    image: eshop-basket-latest
    container_name: eshop-basket
    ports:
      - "8082:8082"
    environment:
      ESHOP_REDIS_HOST: basketdata
      ESHOP_RABBITMQ_HOST: rabbitmq
      KEYCLOAK_URL: http://localhost:8080
      KEYCLOAK_ISSUER_URL: http://identity:8080/realms/eshop
    volumes:
      - maven-cache:/root/.m2

  catalog:
    build:
      context: .
      dockerfile: services/catalog/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgresdata:
        condition: service_healthy
      basket:
        condition: service_started

    image: eshop-catalog-latest
    container_name: eshop-catalog
    ports:
      - "8081:8081"
    environment:
      # the containers are in the same network,so they use the internal postgres port 5432
      ESHOP_DATABASE_URL: jdbc:postgresql://postgresdata:5432/eshop
      ESHOP_DATABASE_USERNAME: eshop_user
      ESHOP_DATABASE_PASSWORD: eshop_password
      ESHOP_RABBITMQ_HOST: rabbitmq
    volumes:
      - maven-cache:/root/.m2

  ordering:
    build:
      context: .
      dockerfile: services/ordering/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      identity:
        condition: service_started
      postgresdata:
        condition: service_healthy
      catalog:
        condition: service_started
    environment:
      ESHOP_DATABASE_URL: jdbc:postgresql://postgresdata:5432/eshop
      ESHOP_DATABASE_USERNAME: eshop_user
      ESHOP_DATABASE_PASSWORD: eshop_password
      ESHOP_RABBITMQ_HOST: rabbitmq
      KEYCLOAK_URL: http://localhost:8080
      KEYCLOAK_ISSUER_URL: http://identity:8080/realms/eshop

    image: eshop-ordering-latest
    container_name: eshop-ordering
    ports:
      - "8083:8083"
    volumes:
      - maven-cache:/root/.m2

  payment:
    build:
      context: .
      dockerfile: services/payment/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgresdata:
        condition: service_healthy
      ordering:
        condition: service_started

    image: eshop-payment-latest
    container_name: eshop-payment
    environment:
      ESHOP_RABBITMQ_HOST: rabbitmq
    volumes:
      - maven-cache:/root/.m2

volumes:
  eshop-basketdata:
    external: false
  eshop-postgres-data:
    external: false
  maven-cache: